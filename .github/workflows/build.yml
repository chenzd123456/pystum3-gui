name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags:
      - 'v*' # Trigger release on version tags
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install uv
          uv sync

      - name: Build executable
        run: |
          uv run pmake.py build
        env:
          KIVY_NO_ARGS: 1

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: pystun3-gui-${{ matrix.os }}
          path: dist/*

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: pystun3-gui-macos-latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pystun3-gui-macos-latest/*
          asset_name: pystun3-gui-${{ github.ref }}.zip
